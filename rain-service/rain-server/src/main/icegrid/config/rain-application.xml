<icegrid>
    <application name="rain">

        <properties id="MultiThreaded">
            <property name="Ice.PrintStackTraces" value="1"/>
            <!-- <property name="Ice.Default.PreferSecure" value="1"/> -->
            <property name="IceSSL.Trace.Security" value="2"/>
            <property name="Ice.ThreadPool.Client.Size" value="2"/>
            <property name="Ice.ThreadPool.Client.SizeMax" value="50"/>
            <property name="Ice.ThreadPool.Server.Size" value="10"/>
            <property name="Ice.ThreadPool.Server.SizeMax" value="100"/>
            <property name="IceBox.InheritProperties" value="1"/>
            <property name="Ice.Override.ConnectTimeout" value="5000"/>
            <property name="Ice.Override.Timeout" value="10000"/>
            <property name="IceBox.Trace.ServiceObserver" value="1"/>
            <property name="Ice.Default.LocatorCacheTimeout" value="300"/>
            <property name="Ice.BackgroundLocatorCacheUpdates" value="1"/>
            <!-- ICE日志 -->
            <property name="Ice.StdErr" value="../logs/stderr_grid.log"/>
            <property name="Ice.StdOut" value="../logs/stdout_grid.log"/>
        </properties>

        <server-template id="IcePatch2">
            <parameter name="instance-name" default="${application}.IcePatch2"/>
            <parameter name="endpoints" default="default"/>
            <parameter name="directory"/>
            <server id="${instance-name}" exe="icepatch2server" application-distrib="false" activation="on-demand">
                <adapter name="IcePatch2" endpoints="${endpoints}">
                    <object identity="${instance-name}/server" type="::IcePatch2::FileServer"/>
                </adapter>
                <properties>
                    <property name="IcePatch2.InstanceName" value="${instance-name}"/>
                    <property name="IcePatch2.Directory" value="${directory}"/>
                </properties>
            </server>
        </server-template>


        <server-template id="Rain_ServerTemplate">
            <parameter name="id"/>
            <icebox id="Demo_Server${id}" exe="java" activation="on-demand">
                <properties>
                    <properties refid="MultiThreaded"/>
                </properties>
                <option>-Xmx512M</option>
                <option>-Duser.timezone=Asia/Shanghai</option>
                <option>-DAppId=Demo_Server${id}</option>
                <!-- 封装了启动日志的类 -->
                <option>com.zjhz.common.ice.v1.server.Sl4jIceBoxServer</option>
                <!-- 普通ICE启动类 -->
                <!-- <option>IceBox.Server</option> -->
                <env>
                    CLASSPATH=${server.distrib}\demo\*;${server.distrib}\demo\libs\*;${server.distrib}\demo\config\*;%CLASSPATH%;.
                </env>
                <distrib>
                    <directory>demo</directory>
                </distrib>
                <property name="IceMX.Metrics.Debug.GroupBy" value="id"/>
                <property name="IceMX.Metrics.Debug.Disabled" value="1"/>
                <property name="IceMX.Metrics.ByParent.GroupBy" value="parent"/>
                <property name="IceMX.Metrics.ByParent.Disabled" value="1"/>
                <!-- 网格服务配置 -->
                <service name="MessageService" entry="com.zjhz.common.ice.v1.impl.IceMessageBoxService">
                    <adapter name="MessageService" id="MessageService${id}" endpoints="default"
                             replica-group="MessageServiceRep">
                    </adapter>
                </service>

            </icebox>
        </server-template>

        <!-- replica服务配置 -->
        <!-- 对特定类型的icebox服务提供负载均衡策略  -->
        <replica-group id="MessageServiceRep">
            <!--  有random、adaptive、round-robin、ordered 这4中负载均衡策略  -->
            <load-balancing type="round-robin" n-replicas="0"/>
            <object identity="MessageService" type="::Demo::MessageService"/>
        </replica-group>

        <node name="node1">
            <server-instance template="Demo_ServerTemplate" id="1"/>
            <server-instance template="Demo_ServerTemplate" id="2"/>
            <server-instance template="IcePatch2" directory="../patch"/>
        </node>
    </application>
</icegrid>
