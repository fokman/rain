// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.2
//
// <auto-generated>
//
// Generated from file `Message.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.rain.common.ice.v1.message;

import java.util.Map;

public class MsgRequest implements java.lang.Cloneable, java.io.Serializable {
    public String service;

    public String method;

    public java.util.Map<java.lang.String, java.lang.String> extraData;

    public int code;

    public String msg;

    public int total;

    public java.util.Map<java.lang.String, java.lang.String> data;

    public java.util.Map<java.lang.String, java.lang.String> attr;

    public MsgRequest() {
        service = "";
        method = "";
        msg = "";
    }

    public MsgRequest(String service, String method, java.util.Map<java.lang.String, java.lang.String> extraData, int code, String msg, int total, java.util.Map<java.lang.String, java.lang.String> data, java.util.Map<java.lang.String, java.lang.String> attr) {
        this.service = service;
        this.method = method;
        this.extraData = extraData;
        this.code = code;
        this.msg = msg;
        this.total = total;
        this.data = data;
        this.attr = attr;
    }

    public MsgRequest(String service, String method, Map<String, String> extraData, Map<String, String> attr) {
        this.service = service;
        this.method = method;
        this.extraData = extraData;
        this.attr = attr;
    }

    public boolean
    equals(java.lang.Object rhs) {
        if (this == rhs) {
            return true;
        }
        MsgRequest _r = null;
        if (rhs instanceof MsgRequest) {
            _r = (MsgRequest) rhs;
        }

        if (_r != null) {
            if (service != _r.service) {
                if (service == null || _r.service == null || !service.equals(_r.service)) {
                    return false;
                }
            }
            if (method != _r.method) {
                if (method == null || _r.method == null || !method.equals(_r.method)) {
                    return false;
                }
            }
            if (extraData != _r.extraData) {
                if (extraData == null || _r.extraData == null || !extraData.equals(_r.extraData)) {
                    return false;
                }
            }
            if (code != _r.code) {
                return false;
            }
            if (msg != _r.msg) {
                if (msg == null || _r.msg == null || !msg.equals(_r.msg)) {
                    return false;
                }
            }
            if (total != _r.total) {
                return false;
            }
            if (data != _r.data) {
                if (data == null || _r.data == null || !data.equals(_r.data)) {
                    return false;
                }
            }
            if (attr != _r.attr) {
                if (attr == null || _r.attr == null || !attr.equals(_r.attr)) {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode() {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::message::MsgRequest");
        __h = IceInternal.HashUtil.hashAdd(__h, service);
        __h = IceInternal.HashUtil.hashAdd(__h, method);
        __h = IceInternal.HashUtil.hashAdd(__h, extraData);
        __h = IceInternal.HashUtil.hashAdd(__h, code);
        __h = IceInternal.HashUtil.hashAdd(__h, msg);
        __h = IceInternal.HashUtil.hashAdd(__h, total);
        __h = IceInternal.HashUtil.hashAdd(__h, data);
        __h = IceInternal.HashUtil.hashAdd(__h, attr);
        return __h;
    }

    public MsgRequest
    clone() {
        MsgRequest c = null;
        try {
            c = (MsgRequest) super.clone();
        } catch (CloneNotSupportedException ex) {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os) {
        __os.writeString(service);
        __os.writeString(method);
        tmapHelper.write(__os, extraData);
        __os.writeInt(code);
        __os.writeString(msg);
        __os.writeInt(total);
        tmapHelper.write(__os, data);
        tmapHelper.write(__os, attr);
    }

    public void
    __read(IceInternal.BasicStream __is) {
        service = __is.readString();
        method = __is.readString();
        extraData = tmapHelper.read(__is);
        code = __is.readInt();
        msg = __is.readString();
        total = __is.readInt();
        data = tmapHelper.read(__is);
        attr = tmapHelper.read(__is);
    }

    static public void
    __write(IceInternal.BasicStream __os, MsgRequest __v) {
        if (__v == null) {
            __nullMarshalValue.__write(__os);
        } else {
            __v.__write(__os);
        }
    }

    static public MsgRequest
    __read(IceInternal.BasicStream __is, MsgRequest __v) {
        if (__v == null) {
            __v = new MsgRequest();
        }
        __v.__read(__is);
        return __v;
    }

    private static final MsgRequest __nullMarshalValue = new MsgRequest();

    public static final long serialVersionUID = -8958019151337647435L;
}
